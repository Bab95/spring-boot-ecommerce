trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    include:
      - /src

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)]
  ROOT: $(Build.SourcesDirectory)
  WindowsContainerImage: 'cdpxwin1809.azurecr.io/global/vse2019:latest'

resources:
  repositories:
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.Official.CrossPlat.yml@templates
  parameters:
    nugetPublishing:
      feeds:
        - name: ACE
        - name: Official
    stages:
      - stage: build
        jobs:
          - job: build
            pool:
              type: windows
            variables:
              ob_outputDirectory: '$(Build.SourcesDirectory)/out'
              ob_sdl_binskim_scanOutputDirectoryOnly: true
              ob_sdl_sdtReport_enabled: false
              ob_sdl_publishLogs_enabled: false
              ob_sdl_codeSignValidation_excludes: -:file|**\*.nupkg*\**
              ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
                ob_nugetPublishing_enabled: true
              ob_symbolsPublishing_enabled: false
              ob_symbolsPublishing_searchPattern: "$(Build.SourcesDirectory)/src/**/*.pdb"

            steps:
              - task: onebranch.pipeline.version@1
                inputs:
                  system: 'RevisionCounter'
                  major: '3'
                  minor: '1'

              - task: NuGetAuthenticate@0

              - task: PowerShell@2
                displayName: restore
                inputs:
                  filePath: ./.build/restore.ps1
                  failOnStderr: true

              - task: PowerShell@2
                displayName: build
                inputs:
                  filePath: ./.build/build.ps1
                  arguments: '-SkipRestore'
                  failOnStderr: true

              - task: PowerShell@2
                displayName: test
                inputs:
                  filePath: ./.build/test.ps1
                  arguments: '-SkipBuild -IncludeCoverage'
                  failOnStderr: true

              - task: PublishTestResults@2
                displayName: 'Publish test results'
                inputs:
                  testResultsFormat: VSTest
                  testResultsFiles: '**/TestResults/*.trx'
                  failTaskOnFailedTests: true

              - task: PublishCodeCoverageResults@1
                displayName: 'Publish code coverage'
                inputs:
                  codeCoverageTool: Cobertura
                  summaryFileLocation: '$(Build.SourcesDirectory)/src/**/coverage.*.cobertura.xml'
                  reportDirectory: '$(Build.SourcesDirectory)/src/**/CoverageResults'

              - task: PowerShell@2
                displayName: pack
                inputs:
                  filePath: ./.build/pack.ps1
                  arguments: '-SkipBuild'
                  failOnStderr: true

              - task: PowerShell@2
                displayName: publish
                inputs:
                  targetType: 'inline'
                  script: |
                    copy -Path "$(Build.SourcesDirectory)/src" -Destination "$(Build.SourcesDirectory)/out/packages/" -Filter *.nupkg -Recurse
                  failOnStderr: true